# This is a basic workflow to create GitHub Issues using the Checkmarx CxFlow GitHub Action.  It runs on a pull-request to the main branch.
#
# The following GitHub Secrets must be first defined:
#   - CHECKMARX_URL
#   - CHECKMARX_USER
#   - CHECKMARX_PASSWORD
#   - CHECKMARX_CLIENT_SECRET
#   - GH_TOKEN
#
# Update the 'team' field to reflect the team name used in Checkmarx.
#
# For full documentation,including a list of all inputs, please refer to the README https://github.com/checkmarx-ts/checkmarx-cxflow-github-action

name: CxFlow-GitHub-Pull-Request

# Controls when the action will run. Triggers the workflow on push or pull request events but only for the master branch
on:
  pull_request:
    types: [opened, reopened, synchronize] #Types specify which pull request events will trigger the workflow. For more events refer Github Actions documentation.
    branches:
    - master
    - main

# A workflow run is made up of one or more jobs that can run sequentially or in parallel - this job is specifically configured to use the Checkmarx CxFlow Action
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on - Ubuntu is required as Docker is leveraged for the action
    runs-on: ubuntu-latest
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.event.pull_request.head.sha }}
    - name: file checker
      run : |
        pwd
        echo $GITHUB_WORKSPACE
        find . -type f | grep -i -E -o "\.\w*$" | sort | uniq -c
        CXFILELIST=x`find . -type f -regex ".*\.\(apex\|apexp\|app\|asax\|ascx\|asp\|aspx\|bas\|c\|c++\|cbl\|cc\|cgi\|cls\|cmp\|cob\|component\|conf\|config\|cpp\|cpy\|cs\|cshtml\|ctl\|ctp\|cxx\|dll\|dsr\|ec\|eco\|erb\|evt\|frm\|go\|gradle\|groovy\|gsh\|gsp\|gtl\|gvy\|gy\|h\|h++\|handlebars\|hbs\|hh\|hpp\|htm\|html\|hxx\|inc\|jade\|jar\|java\|js\|jsf\|json\|jsp\|jspf\|jsx\|kt\|kts\|lock\|m\|master\|-meta.xml\|mf\|mustache\|object\|page\|pck\|pco\|php\|php3\|php4\|php5\|phtm\|phtml\|pkb\|pkh\|pks\|pl\|plist\|pls\|plx\|pm\|properties\|psgi\|pug\|py\|rb\|report\|rhtml\|rjs\|rxml\|scala\|sqb\|sql\|swift\|tag\|tgr\|tld\|tpl\|trigger\|ts\|tsx\|twig\|vb\|vbp\|vbs\|vm\|vue\|wod\|workflow\|xaml\|xhtml\|xib\|xml\|xsaccess\|xsapp\|xsjs\|xsjslib\)" | grep -i -E -o "\.\w*$" | sort | uniq -c`
        echo $CXFILELIST
        if [[ $CXFILELIST == 'x' ]]; echo "no scannable files found"; exit 1
    - name: Checkmarx CxFlow Action
      uses: checkmarx-ts/checkmarx-cxflow-github-action@v1.3
      with:
        project: ${{ github.repository }}-PR
        team: ${{ secrets.CHECKMARX_TEAMS }}
        #team: CxServer
        checkmarx_url: ${{ secrets.CHECKMARX_URL }}   # To be stored in GitHub Secrets.
        checkmarx_username: ${{ secrets.CHECKMARX_USERNAME }}  # To be stored in GitHub Secrets.
        checkmarx_password: ${{ secrets.CHECKMARX_PASSWORD }}  # To be stored in GitHub Secrets.
        checkmarx_client_secret: ${{ secrets.CHECKMARX_CLIENT_SECRET }}  # To be stored in GitHub Secrets.
        incremental: false
        break_build: false
        scanners: sast
        bug_tracker: GITHUBPULL
        params: --namespace=${{ github.repository_owner }}  --repo-name=${{ github.event.repository.name }} --branch=${{ github.head_ref }} --merge-id=${{ github.event.number }} --cx-flow.filterSeverity --cx-flow.filterCategory
